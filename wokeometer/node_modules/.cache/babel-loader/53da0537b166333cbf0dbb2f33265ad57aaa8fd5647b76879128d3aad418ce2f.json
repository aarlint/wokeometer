{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{QUESTIONS}from'../data';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NewAssessment=_ref=>{let{setCurrentAssessment}=_ref;const[showName,setShowName]=useState('');const[showType,setShowType]=useState('');const[questionsPerPage,setQuestionsPerPage]=useState(5);const navigate=useNavigate();const handleSubmit=e=>{e.preventDefault();if(!showName.trim()){alert('Please enter a show name');return;}// Create new assessment object\nconst newAssessment={showName,showType,questionsPerPage,questions:[...QUESTIONS],// Copy questions with default answers\ncurrentPage:1,totalPages:Math.ceil(QUESTIONS.length/questionsPerPage)};// Set the current assessment\nsetCurrentAssessment(newAssessment);// Navigate to the assessment wizard\nnavigate('/assessment');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"page-title text-2xl font-bold\",children:\"New Assessment\"}),/*#__PURE__*/_jsx(\"div\",{className:\"max-w-2xl mx-auto bg-white rounded-lg shadow-md p-6\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"show-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"showName\",className:\"form-label\",children:\"Show/Movie Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"showName\",className:\"form-input\",value:showName,onChange:e=>setShowName(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"showType\",className:\"form-label\",children:\"Type:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"showType\",className:\"form-input\",value:showType,onChange:e=>setShowType(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"-- Select Type --\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Movie\",children:\"Movie\"}),/*#__PURE__*/_jsx(\"option\",{value:\"TV Show\",children:\"TV Show\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Web Series\",children:\"Web Series\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Documentary\",children:\"Documentary\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group questions-per-page\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Questions Per Page:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-2 gap-3 mt-2\",children:[3,5,10,24].map(num=>/*#__PURE__*/_jsxs(\"label\",{className:`radio-label border ${questionsPerPage===num?'selected':''}`,children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"questionsPerPage\",value:num,checked:questionsPerPage===num,onChange:()=>setQuestionsPerPage(num)}),/*#__PURE__*/_jsx(\"span\",{children:num===24?'All Questions':num})]},num))})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary self-start\",children:\"Start Assessment\"})]})})]});};export default NewAssessment;","map":{"version":3,"names":["React","useState","useNavigate","QUESTIONS","jsx","_jsx","jsxs","_jsxs","NewAssessment","_ref","setCurrentAssessment","showName","setShowName","showType","setShowType","questionsPerPage","setQuestionsPerPage","navigate","handleSubmit","e","preventDefault","trim","alert","newAssessment","questions","currentPage","totalPages","Math","ceil","length","children","className","onSubmit","htmlFor","type","id","value","onChange","target","required","map","num","name","checked"],"sources":["/Users/austin/workmeter/wokeometer/src/pages/NewAssessment.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { QUESTIONS } from '../data';\n\nconst NewAssessment = ({ setCurrentAssessment }) => {\n  const [showName, setShowName] = useState('');\n  const [showType, setShowType] = useState('');\n  const [questionsPerPage, setQuestionsPerPage] = useState(5);\n  const navigate = useNavigate();\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (!showName.trim()) {\n      alert('Please enter a show name');\n      return;\n    }\n    \n    // Create new assessment object\n    const newAssessment = {\n      showName,\n      showType,\n      questionsPerPage,\n      questions: [...QUESTIONS], // Copy questions with default answers\n      currentPage: 1,\n      totalPages: Math.ceil(QUESTIONS.length / questionsPerPage)\n    };\n    \n    // Set the current assessment\n    setCurrentAssessment(newAssessment);\n    \n    // Navigate to the assessment wizard\n    navigate('/assessment');\n  };\n  \n  return (\n    <div>\n      <h2 className=\"page-title text-2xl font-bold\">New Assessment</h2>\n      \n      <div className=\"max-w-2xl mx-auto bg-white rounded-lg shadow-md p-6\">\n        <form onSubmit={handleSubmit} className=\"show-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"showName\" className=\"form-label\">Show/Movie Name:</label>\n            <input\n              type=\"text\"\n              id=\"showName\"\n              className=\"form-input\"\n              value={showName}\n              onChange={(e) => setShowName(e.target.value)}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"showType\" className=\"form-label\">Type:</label>\n            <select\n              id=\"showType\"\n              className=\"form-input\"\n              value={showType}\n              onChange={(e) => setShowType(e.target.value)}\n            >\n              <option value=\"\">-- Select Type --</option>\n              <option value=\"Movie\">Movie</option>\n              <option value=\"TV Show\">TV Show</option>\n              <option value=\"Web Series\">Web Series</option>\n              <option value=\"Documentary\">Documentary</option>\n              <option value=\"Other\">Other</option>\n            </select>\n          </div>\n          \n          <div className=\"form-group questions-per-page\">\n            <label className=\"form-label\">Questions Per Page:</label>\n            <div className=\"grid grid-cols-2 gap-3 mt-2\">\n              {[3, 5, 10, 24].map(num => (\n                <label \n                  key={num} \n                  className={`radio-label border ${questionsPerPage === num ? 'selected' : ''}`}\n                >\n                  <input\n                    type=\"radio\"\n                    name=\"questionsPerPage\"\n                    value={num}\n                    checked={questionsPerPage === num}\n                    onChange={() => setQuestionsPerPage(num)}\n                  />\n                  <span>{num === 24 ? 'All Questions' : num}</span>\n                </label>\n              ))}\n            </div>\n          </div>\n          \n          <button type=\"submit\" className=\"btn btn-primary self-start\">\n            Start Assessment\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default NewAssessment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}