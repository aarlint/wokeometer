{"ast":null,"code":"// Data from the WokeoMeter Excel file\n\n// Answer options\nexport const ANSWER_OPTIONS = [\"-- SELECT ONE --\", \"N/A\", \"Disagree\", \"Agree\", \"Strongly Agree\"];\n\n// All questions from the Excel file\nexport const QUESTIONS = [{\n  id: 1,\n  text: \"Background cast or extras: Exaggerated racial diversity in more than one scene\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 2,\n  text: \"Racial diversity across cast is incongruous with show setting/locale\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 3,\n  text: \"Overt marginalization of white cast\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 4,\n  text: \"Religion: Overt anti-Christian rhetoric\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 5,\n  text: \"Religion: Overt anti-semitic rhetoric\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 6,\n  text: \"Religion: Sigificant depiction of non-Christian religion\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 7,\n  text: \"Anti-nationalistic or anti-US rhetoric or theme\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 8,\n  text: \"Gay man in significant role\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 9,\n  text: \"Lesbian woman in significant role\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 10,\n  text: \"Trans man in significant role\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 11,\n  text: \"Trans woman in significant role\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 12,\n  text: \"Individual of indeterminate gender in significant or background role\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 13,\n  text: \"Gay couple in significant roles\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 14,\n  text: \"Lesbian couple in significant roles\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 15,\n  text: \"Trans couple in significant or background role\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 16,\n  text: \"Other (furry, etc.) in significant or background role\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 17,\n  text: \"Mixed race couple in significant or background roles\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 18,\n  text: \"Mixed race gay/lesbian couple in significant roles\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 19,\n  text: \"Black lead actor/actress in significant role\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 20,\n  text: \"Asian lead actor/actress in significant role\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 21,\n  text: \"Other non-white lead actor/actress in significant role\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 22,\n  text: \"Lead actor/actress in role almost always associated with the opposite gender (i.e, a woman commando single-handedly fighting a platoon of men in an action movie)\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 23,\n  text: \"Left-leaning geopolitical rhetoric (pro-Hamas, pro-terrorism, etc.)\",\n  answer: \"-- SELECT ONE --\"\n}, {\n  id: 24,\n  text: \"Contains significantly altared characters (race or gender) from original classic storyline (e.g., a black Snow White, an Indian Ariel, etc.)\",\n  answer: \"-- SELECT ONE --\"\n}];\n\n// Score calculation function\nexport const calculateScore = answers => {\n  let totalScore = 0;\n  for (const question of answers) {\n    if (question.answer === \"Agree\") {\n      totalScore += 5;\n    } else if (question.answer === \"Strongly Agree\") {\n      totalScore += 10;\n    }\n    // N/A and Disagree are 0 points\n  }\n  return totalScore;\n};\n\n// Get wokeness category based on score\nexport const getWokenessCategory = score => {\n  if (score === 0) {\n    return \"\";\n  } else if (score >= 0 && score <= 30) {\n    return \"Limited Wokeness\";\n  } else if (score > 30 && score <= 60) {\n    return \"Woke\";\n  } else if (score > 60 && score <= 120) {\n    return \"Very Woke\";\n  } else if (score > 120) {\n    return \"Egregiously Woke\";\n  }\n  return \"\";\n};\n\n// Save assessment to localStorage\nexport const saveAssessment = (showName, questions, score, category) => {\n  const savedAssessments = JSON.parse(localStorage.getItem('wokeometerAssessments') || '[]');\n  const assessment = {\n    id: Date.now(),\n    showName,\n    date: new Date().toISOString(),\n    questions: [...questions],\n    score,\n    category\n  };\n  savedAssessments.push(assessment);\n  localStorage.setItem('wokeometerAssessments', JSON.stringify(savedAssessments));\n  return assessment;\n};\n\n// Load all assessments from localStorage\nexport const loadAssessments = () => {\n  return JSON.parse(localStorage.getItem('wokeometerAssessments') || '[]');\n};\n\n// Get assessment by ID\nexport const getAssessment = id => {\n  const assessments = loadAssessments();\n  return assessments.find(a => a.id === id) || null;\n};","map":{"version":3,"names":["ANSWER_OPTIONS","QUESTIONS","id","text","answer","calculateScore","answers","totalScore","question","getWokenessCategory","score","saveAssessment","showName","questions","category","savedAssessments","JSON","parse","localStorage","getItem","assessment","Date","now","date","toISOString","push","setItem","stringify","loadAssessments","getAssessment","assessments","find","a"],"sources":["/Users/austin/workmeter/src/data.js"],"sourcesContent":["// Data from the WokeoMeter Excel file\n\n// Answer options\nexport const ANSWER_OPTIONS = [\n  \"-- SELECT ONE --\",\n  \"N/A\",\n  \"Disagree\",\n  \"Agree\",\n  \"Strongly Agree\"\n];\n\n// All questions from the Excel file\nexport const QUESTIONS = [\n  {\n    id: 1,\n    text: \"Background cast or extras: Exaggerated racial diversity in more than one scene\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 2,\n    text: \"Racial diversity across cast is incongruous with show setting/locale\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 3,\n    text: \"Overt marginalization of white cast\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 4,\n    text: \"Religion: Overt anti-Christian rhetoric\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 5,\n    text: \"Religion: Overt anti-semitic rhetoric\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 6,\n    text: \"Religion: Sigificant depiction of non-Christian religion\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 7,\n    text: \"Anti-nationalistic or anti-US rhetoric or theme\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 8,\n    text: \"Gay man in significant role\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 9,\n    text: \"Lesbian woman in significant role\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 10,\n    text: \"Trans man in significant role\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 11,\n    text: \"Trans woman in significant role\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 12,\n    text: \"Individual of indeterminate gender in significant or background role\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 13,\n    text: \"Gay couple in significant roles\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 14,\n    text: \"Lesbian couple in significant roles\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 15,\n    text: \"Trans couple in significant or background role\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 16,\n    text: \"Other (furry, etc.) in significant or background role\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 17,\n    text: \"Mixed race couple in significant or background roles\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 18,\n    text: \"Mixed race gay/lesbian couple in significant roles\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 19,\n    text: \"Black lead actor/actress in significant role\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 20,\n    text: \"Asian lead actor/actress in significant role\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 21,\n    text: \"Other non-white lead actor/actress in significant role\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 22,\n    text: \"Lead actor/actress in role almost always associated with the opposite gender (i.e, a woman commando single-handedly fighting a platoon of men in an action movie)\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 23,\n    text: \"Left-leaning geopolitical rhetoric (pro-Hamas, pro-terrorism, etc.)\",\n    answer: \"-- SELECT ONE --\"\n  },\n  {\n    id: 24,\n    text: \"Contains significantly altared characters (race or gender) from original classic storyline (e.g., a black Snow White, an Indian Ariel, etc.)\",\n    answer: \"-- SELECT ONE --\"\n  }\n];\n\n// Score calculation function\nexport const calculateScore = (answers) => {\n  let totalScore = 0;\n  \n  for (const question of answers) {\n    if (question.answer === \"Agree\") {\n      totalScore += 5;\n    } else if (question.answer === \"Strongly Agree\") {\n      totalScore += 10;\n    }\n    // N/A and Disagree are 0 points\n  }\n  \n  return totalScore;\n};\n\n// Get wokeness category based on score\nexport const getWokenessCategory = (score) => {\n  if (score === 0) {\n    return \"\";\n  } else if (score >= 0 && score <= 30) {\n    return \"Limited Wokeness\";\n  } else if (score > 30 && score <= 60) {\n    return \"Woke\";\n  } else if (score > 60 && score <= 120) {\n    return \"Very Woke\";\n  } else if (score > 120) {\n    return \"Egregiously Woke\";\n  }\n  \n  return \"\";\n};\n\n// Save assessment to localStorage\nexport const saveAssessment = (showName, questions, score, category) => {\n  const savedAssessments = JSON.parse(localStorage.getItem('wokeometerAssessments') || '[]');\n  \n  const assessment = {\n    id: Date.now(),\n    showName,\n    date: new Date().toISOString(),\n    questions: [...questions],\n    score,\n    category\n  };\n  \n  savedAssessments.push(assessment);\n  localStorage.setItem('wokeometerAssessments', JSON.stringify(savedAssessments));\n  \n  return assessment;\n};\n\n// Load all assessments from localStorage\nexport const loadAssessments = () => {\n  return JSON.parse(localStorage.getItem('wokeometerAssessments') || '[]');\n};\n\n// Get assessment by ID\nexport const getAssessment = (id) => {\n  const assessments = loadAssessments();\n  return assessments.find(a => a.id === id) || null;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}