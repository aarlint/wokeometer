{"ast":null,"code":"var _jsxFileName = \"/Users/austin/workmeter/src/pages/NewAssessment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { QUESTIONS } from '../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewAssessment = ({\n  setCurrentAssessment\n}) => {\n  _s();\n  const [showName, setShowName] = useState('');\n  const [showType, setShowType] = useState('');\n  const [questionsPerPage, setQuestionsPerPage] = useState(5);\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!showName.trim()) {\n      alert('Please enter a show name');\n      return;\n    }\n\n    // Create new assessment object\n    const newAssessment = {\n      showName,\n      showType,\n      questionsPerPage,\n      questions: [...QUESTIONS],\n      // Copy questions with default answers\n      currentPage: 1,\n      totalPages: Math.ceil(QUESTIONS.length / questionsPerPage)\n    };\n\n    // Set the current assessment\n    setCurrentAssessment(newAssessment);\n\n    // Navigate to the assessment wizard\n    navigate('/assessment');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"page-title text-2xl font-bold\",\n      children: \"New Assessment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto bg-white rounded-lg shadow-md p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"show-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"showName\",\n            className: \"form-label\",\n            children: \"Show/Movie Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"showName\",\n            className: \"form-input\",\n            value: showName,\n            onChange: e => setShowName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"showType\",\n            className: \"form-label\",\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"showType\",\n            className: \"form-input\",\n            value: showType,\n            onChange: e => setShowType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select Type --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Movie\",\n              children: \"Movie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"TV Show\",\n              children: \"TV Show\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Web Series\",\n              children: \"Web Series\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Documentary\",\n              children: \"Documentary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group questions-per-page\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"questionsPerPage\",\n            className: \"form-label\",\n            children: \"Questions Per Page:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"questionsPerPage\",\n            className: \"form-input\",\n            value: questionsPerPage,\n            onChange: e => setQuestionsPerPage(parseInt(e.target.value)),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"5\",\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10\",\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"24\",\n              children: \"All Questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary self-start\",\n          children: \"Start Assessment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(NewAssessment, \"HJlSJz9f9S9AS/jD5QKZJjZ2snU=\", false, function () {\n  return [useNavigate];\n});\n_c = NewAssessment;\nexport default NewAssessment;\nvar _c;\n$RefreshReg$(_c, \"NewAssessment\");","map":{"version":3,"names":["React","useState","useNavigate","QUESTIONS","jsxDEV","_jsxDEV","NewAssessment","setCurrentAssessment","_s","showName","setShowName","showType","setShowType","questionsPerPage","setQuestionsPerPage","navigate","handleSubmit","e","preventDefault","trim","alert","newAssessment","questions","currentPage","totalPages","Math","ceil","length","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","parseInt","_c","$RefreshReg$"],"sources":["/Users/austin/workmeter/src/pages/NewAssessment.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { QUESTIONS } from '../data';\n\nconst NewAssessment = ({ setCurrentAssessment }) => {\n  const [showName, setShowName] = useState('');\n  const [showType, setShowType] = useState('');\n  const [questionsPerPage, setQuestionsPerPage] = useState(5);\n  const navigate = useNavigate();\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (!showName.trim()) {\n      alert('Please enter a show name');\n      return;\n    }\n    \n    // Create new assessment object\n    const newAssessment = {\n      showName,\n      showType,\n      questionsPerPage,\n      questions: [...QUESTIONS], // Copy questions with default answers\n      currentPage: 1,\n      totalPages: Math.ceil(QUESTIONS.length / questionsPerPage)\n    };\n    \n    // Set the current assessment\n    setCurrentAssessment(newAssessment);\n    \n    // Navigate to the assessment wizard\n    navigate('/assessment');\n  };\n  \n  return (\n    <div>\n      <h2 className=\"page-title text-2xl font-bold\">New Assessment</h2>\n      \n      <div className=\"max-w-2xl mx-auto bg-white rounded-lg shadow-md p-6\">\n        <form onSubmit={handleSubmit} className=\"show-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"showName\" className=\"form-label\">Show/Movie Name:</label>\n            <input\n              type=\"text\"\n              id=\"showName\"\n              className=\"form-input\"\n              value={showName}\n              onChange={(e) => setShowName(e.target.value)}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"showType\" className=\"form-label\">Type:</label>\n            <select\n              id=\"showType\"\n              className=\"form-input\"\n              value={showType}\n              onChange={(e) => setShowType(e.target.value)}\n            >\n              <option value=\"\">-- Select Type --</option>\n              <option value=\"Movie\">Movie</option>\n              <option value=\"TV Show\">TV Show</option>\n              <option value=\"Web Series\">Web Series</option>\n              <option value=\"Documentary\">Documentary</option>\n              <option value=\"Other\">Other</option>\n            </select>\n          </div>\n          \n          <div className=\"form-group questions-per-page\">\n            <label htmlFor=\"questionsPerPage\" className=\"form-label\">Questions Per Page:</label>\n            <select\n              id=\"questionsPerPage\"\n              className=\"form-input\"\n              value={questionsPerPage}\n              onChange={(e) => setQuestionsPerPage(parseInt(e.target.value))}\n            >\n              <option value=\"3\">3</option>\n              <option value=\"5\">5</option>\n              <option value=\"10\">10</option>\n              <option value=\"24\">All Questions</option>\n            </select>\n          </div>\n          \n          <button type=\"submit\" className=\"btn btn-primary self-start\">\n            Start Assessment\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default NewAssessment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}